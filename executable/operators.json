// digital output
{
    "operator":4294967295,
    "portAddress":65535,
    "outputStream":[]
}

//digital input

{
    "operator":4294967295,
    "portAddress":65535,
    "sampleRate":1000,
    "sampleSize":int,           // null should return and a number in form of a string
    "sampleArray":[]            // this should be what would return
}


//onchange digital input listener
{
    "operator":4294967295,
    "portAddress":65535,
    "enableInput":4294967295
}

// delay operator
{
    "operator":4294967295,
    "delayValueMicroSec":65535,
    "delayValue":65535
}

// loop operator
{
    "operator":4294967295,
    "loopCounter":65535,
    "loopBody":[]
}

//create empty buffer
{

}


// //buffer
// {
//     "operator": int,
//     "bufferIdentifier":int,
//     "sizeRequired":int,
//     "delete":bool
// }

//write buffer
{
    "operator":int,
    "bufferIdentifier":int,
    "data":data form another operator
}

//read buffer           // return data from that address
{
    "operator":int,
    "bufferIdentifier":int
}

//free buffer
{
    "operator":int,
    "bufferIdentifier":int
}


//operator console logger
{
    "operator":int,
    "consoleData":string
}



// operator hardware id       // returns predefined string
{
    "operator":int,
}

// operator fetch
{
    "operator":int,
    "webHost":str,
    "postBody":str,
} 


// operator $
{
    "operator":int,
    "totalLength":int,
    "subString":[]
}


// operator add event listener
{
    "operator":int,
    "eventAddress":int,
    "eventExecutable":{
        "eventExecutable":{},
        "handlerExecutable":{},
        "onchangeAddress":int
    }
}


// remove event listener
{
    "operator":int,
    "eventAddress":int
}


// change event polling rate
{
    "operator":int,
    "pollingRate":int
}


// operator json
{
    "operator":int,
    "objectKey":executable,
    "executableJson":executable
}


// create function operator
{
    "operator":int,
    "functionAddress":int,
    "functionObject":{
        "parameterAddress":int,
        "stackExecutable":executable,
        "returnExecutable":executable
    }
}


// call function operator
{
    "operator":int,
    "functionAddress":int,
    "parameterObject":{}
}


//  those operators are for future implementation 



// operator offload virtual controller memory
{

}

// operator set virtual controller memory
{

}

// clear virtual controller memory
{

}


// digital input operator simplified
{
    "operator":int,
    "portAddress":
}


{"memory":[{"EE":{"OP":4},"HE":{"OP":4},"CA":200},{"OP":3,"CD":{"OP":6,"BI":100}}]}



[{"OP":9,"EA":100,"EE":{"EE":{"OP":4},"HE":{"OP":4},"CA":200}},{"OP":3,"CD":{"OP":6,"BI":100}}]